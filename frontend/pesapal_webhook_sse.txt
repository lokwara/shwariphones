import axios from "axios";

export const dynamic = "force-dynamic";
export const runtime = "edge";

let tx_response;

export default async function handler(req, res) {
  if (req.method === "POST") {
    try {
      const params = await req.json();

      console.log("Received Webhook Data:", params);

      // Get Bearer token
      const auth_data = {
        consumer_key: "qkio1BGGYAXTu2JOfm7XSXNruoZsrqEW",
        consumer_secret: "osGQ364R49cXKeOYSpaOnT++rHs=",
      };

      // const config = {
      //   method: "post",
      //   maxBodyLength: Infinity,
      //   url: "https://cybqa.pesapal.com/pesapalv3/api/Auth/RequestToken",
      //   headers: {
      //     Accept: "application/json",
      //     "Content-Type": "application/json",
      //   },
      //   data: auth_data,
      // };

      // const { data: token } = await axios.request(config);

      const res = await fetch(
        "https://cybqa.pesapal.com/pesapalv3/api/Auth/RequestToken",
        {
          method: "POST",
          headers: {
            Accept: "application/json",
            "Content-Type": "application/json",
          },
          body: JSON.stringify(auth_data),
        }
      );

      if (!res.ok) throw new Error("Failed to fetch token");
      const { token } = await res.json();
      console.log("Token", token);

      // Get transaction status
      try {
        // const config = {
        //   method: "get",
        //   url: `https://cybqa.pesapal.com/pesapalv3/api/Transactions/GetTransactionStatus?orderTrackingId=${params?.OrderTrackingId}`,
        //   headers: {
        //     Accept: "application/json",
        //     "Content-Type": "application/json",
        //     Authorization: `Bearer ${token}`,
        //   },
        // };

        // const { data: response } = await axios.request(config);

        const res = await fetch(
          `https://cybqa.pesapal.com/pesapalv3/api/Transactions/GetTransactionStatus?orderTrackingId=${params?.OrderTrackingId}`,
          {
            method: "GET",
            headers: {
              Accept: "application/json",
              "Content-Type": "application/json",
              Authorization: `Bearer ${token}`,
            },
          }
        );

        if (!res.ok) throw new Error("Failed to fetch token");
        const response = await res.json();

        //   Save tx response to variable
        console.log("Response", response);
        tx_response = response;

        //   const response = {
        //     payment_method: "MpesaKE",
        //     amount: 1,
        //     created_date: "2025-02-12T18:59:18.353",
        //     confirmation_code: "TBC0RZC54W",
        //     order_tracking_id: "1cb66b63-a0c5-43af-9be2-dc2a3d58acd0",
        //     payment_status_description: "Completed",
        //     description: null,
        //     message: "Request processed successfully",
        //     payment_account: "2547xxx20306",
        //     call_back_url:
        //       "https://www.shwariphones.africa/account?OrderTrackingId=1cb66b63-a0c5-43af-9be2-dc2a3d58acd0&OrderMerchantReference=1739375936445",
        //     status_code: 1,
        //     merchant_reference: "1739375936445",
        //     account_number: null,
        //     payment_status_code: "",
        //     currency: "KES",
        //     error: { error_type: null, code: null, message: null },
        //     status: "200",
        //   };

        return new Response(
          JSON.stringify({
            orderNotificationType: params?.OrderNotificationType,
            orderTrackingId: params?.OrderTrackingId,
            orderMerchantReference: params?.OrderMerchantReference,
            status: 200,
          }),
          {
            status: 200,
            headers: {
              "Content-Type": "application/json",
            },
          }
        );
      } catch (error) {
        return new Response(
          JSON.stringify({
            message: "Error getting tx status",
            error: error.response?.data || error.message,
          }),
          {
            status: 500,
            headers: {
              "Content-Type": "application/json",
            },
          }
        );
      }
    } catch (error) {
      return new Response(
        JSON.stringify({
          message: "Error processing webhook",
          error: error?.response?.data || error?.message,
        }),
        {
          status: 500,
          headers: {
            "Content-Type": "application/json",
          },
        }
      );
    }
  } else if (req.method === "GET") {
    return new Response(createSSEStream(), {
      headers: {
        "Content-Type": "text/event-stream",
        Connection: "keep-alive",
        "Cache-Control": "no-cache",
      },
    });
  }
}

function createSSEStream() {
  return new ReadableStream({
    async start(controller) {
      const encoder = new TextEncoder();

      while (true) {
        if (tx_response) {
          console.log("Sending SSE:", tx_response);
          const message = JSON.stringify(tx_response);
          controller.enqueue(encoder.encode(`data: ${message}\n\n`));
          tx_response = null;
        }

        await new Promise((resolve) => setTimeout(resolve, 1000)); // Small delay
      }
    },
  });
}
